{"version":3,"sources":["services/notes.js","components/Notes.jsx","components/NoteForm.jsx","components/Home.jsx","services/login.js","components/Notification.jsx","components/LoginForm.jsx","components/Togglable.jsx","components/NavBar.jsx","App5.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","token","services_notes","getAll","_ref","asyncToGenerator","_callee","response","data","_context","fetch","json","apply","arguments","_ref2","_callee2","newObject","options","_context2","headers","Authorization","axios","post","_x","update","id","put","concat","deleteEntry","delete","setToken","Note","note","toggleImportance","label","important","react_default","a","createElement","Fragment","style","display","justifyContent","alignItems","className","content","Button","variant","onClick","marginLeft","Notes","newNote","_useState","useState","_useState2","slicedToArray","notes","setNotes","useEffect","comm","toConsumableArray","Table","striped","bordered","hover","map","Notes_Note","find","changedNote","objectSpread","newNotes","splice","indexOf","status","filter","NoteForm","createNote","setNewNote","textAlign","Form","Group","Label","Control","onChange","e","target","preventDefault","Home","href","login_regeneratorRuntime","services_login","login","credentials","Notification","message","Alert","LoginForm","handleLogin","username","getUsername","password","getPassword","controlId","placeholder","Togglable","forwardRef","props","refs","loginVisible","setLoginVisible","toggleVisibility","user","alert","useImperativeHandle","width","margin","padding","marginBottom","buttonLabel","children","NavBar","handleLogout","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","react_router_dom_dist","to","App5_regeneratorRuntime","App","_useState3","_useState4","setUsername","_useState5","_useState6","setPassword","_useState7","_useState8","setUser","_useState9","_useState10","notification","setNotification","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","setTimeout","t0","console","log","noteFormRef","current","_user2","request","setItem","stringify","_x2","useRef","components_NavBar","removeItem","components_Notification","dist","path","element","components_Notes","components_Togglable","ref","components_NoteForm","components_Home","replace","components_LoginForm","ReactDOM","createRoot","document","getElementById","render","StrictMode","App5"],"mappings":"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","file":"static/js/main.e04864f7.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = setToken => {\r\n  token = `Bearer ${setToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n    let response = await fetch(baseUrl)\r\n    let data = await response.json()\r\n    return data\r\n  }\r\n  \r\n  const create = async newObject => {\r\n    const options = {\r\n      headers: {\r\n        Authorization: token  \r\n      }\r\n    }\r\n    const response = await axios.post(baseUrl, newObject, options)\r\n    return response.data\r\n  \r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n  }\r\n\r\n  const deleteEntry = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n  }\r\n  \r\n\r\n  export default { getAll, create, update, deleteEntry, setToken}    ","import React, {useState, useEffect} from 'react'\r\nimport {Button, Table} from 'react-bootstrap'\r\nimport comm from '../services/notes.js'\r\n\r\n\r\n\r\nconst Note = ({ note, toggleImportance, deleteEntry }) => {\r\n\r\n  const label = note.important ? 'make not important' : 'make important'\r\n\r\n  const style = {\r\n    display:'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <div style={style}  className='note'>\r\n        <h4>{note.content}</h4>\r\n\r\n        <div>\r\n        <Button \r\n        variant = {label === 'make not important' ? 'secondary':'primary'} \r\n        className='impBtn' \r\n        onClick = {toggleImportance}>\r\n          {label}\r\n        </Button>\r\n        <Button \r\n        style={{marginLeft:'3px'}} \r\n        variant='danger' \r\n        onClick = {deleteEntry}>\r\n          Delete\r\n        </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n// notes component\r\nconst Notes = ({newNote}) => {\r\n\r\n  const [notes, setNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    let response = comm.getAll()\r\n    response.then(data => setNotes(data))\r\n\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(newNote) {\r\n      setNotes([...notes, newNote])\r\n    }\r\n  }, [newNote])\r\n  \r\n\r\n\r\n  const toggleImportance = (id) => {\r\n    const note = notes.find(note => note.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    comm\r\n      .update(id, changedNote)\r\n      .then(response => {\r\n        let newNotes = [...notes]\r\n\r\n        newNotes.splice(newNotes.indexOf(note), 1, response.data)    // array that containes the removed elements\r\n        setNotes(newNotes)\r\n      })\r\n  }\r\n\r\n  const deleteEntry = id => {\r\n    comm\r\n      .deleteEntry(id)\r\n      .then(response => {\r\n        if(response.status === 204) {\r\n\r\n          const newNotes = notes.filter(note => note.id !== id)\r\n          setNotes(newNotes)\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    <Table striped bordered hover className='noteTable'>\r\n        <tbody>\r\n        {\r\n          notes.map(note => \r\n            <tr key = {note.id}>\r\n              <td>\r\n              <Note \r\n              note = {note} \r\n              toggleImportance = {() => toggleImportance(note.id)}\r\n              deleteEntry = {() => deleteEntry(note.id)}/>\r\n              </td> \r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n  )\r\n}\r\n\r\nexport default Notes","import React, {useState} from 'react';\r\nimport {Form, Button} from 'react-bootstrap'\r\nconst NoteForm = ({createNote}) => {\r\n\r\n   const [newNote, setNewNote] = useState('')\r\n   \r\n   const getNote = e => setNewNote(e.target.value)\r\n   \r\n   const addNote = e => {\r\n    e.preventDefault()\r\n    let noteToAdd = {\r\n        content: newNote,\r\n        important: false\r\n     }\r\n    createNote(noteToAdd)\r\n   }\r\n  \r\n\r\n   return (\r\n    <>\r\n      <div>\r\n\r\n        <h2 style = {{textAlign: 'center'}}>\r\n          Add a new note\r\n        </h2>\r\n      \r\n      <Form >\r\n        <Form.Group className = 'formGroup'>\r\n          <Form.Label>Note: </Form.Label>\r\n       <Form.Control \r\n        id='noteInput'\r\n        value = {newNote}\r\n        onChange = {getNote}/>\r\n       <Button onClick = {addNote} variant='primary' id='addNoteBtn'>Add Note</Button>\r\n       </Form.Group>\r\n      </Form>\r\n\r\n      </div>\r\n    </>\r\n   )\r\n}\r\n\r\nexport default NoteForm","import React from 'react'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className = 'homeContainer'>\r\n      <h2 id = 'welcomeHeader'>Welcome to the Note Application</h2>\r\n\r\n      <div className = 'content'>\r\n        <h3>Purpose</h3>\r\n        <p>\r\n          On this note application we can create notes which will have a 'non-important' default. As a user you can change the importance of notes by clicking on the 'make important' button. This web application runs on the MERN stack (MongoDB, Express.js, React.js, Node.js)\r\n        </p>\r\n      </div>\r\n\r\n      <div className = 'content'>\r\n        <h3>More About</h3>\r\n        <p>To learn more about this project, you can visit <a href=\"https://github.com/SantiagoBenitezPerez\">my github account</a>. In case of any bug that you come across fell free to make a pull request to the the repository of this project.</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Notification = ({message}) => {\r\n  return (\r\n    <>\r\n    {message ? (<Alert>{message}</Alert>):null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n\r\nconst LoginForm = ({\r\n  handleLogin,\r\n  username,\r\n  getUsername,\r\n  password,\r\n  getPassword\r\n}) => {\r\n  return (\r\n\r\n    <Form className='loginFormContainer'>\r\n      {/* <div> */}\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control className='loginInput' value={username} type=\"username\" placeholder=\"Enter email\" onChange={getUsername} />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control className='loginInput' value={password} type=\"password\" placeholder=\"Password\" onChange={getPassword} />\r\n      </Form.Group>\r\n\r\n      <Button onClick={handleLogin} id = 'loginBtn' type=\"submit\">log in</Button>\r\n\r\n      {/* </div> */}\r\n\r\n\r\n      {/* <div>\r\n         username:\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={getUsername}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n         password:\r\n        <input\r\n          id=\"password\"\r\n          type=\"text\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={getPassword}\r\n        />\r\n      </div> */}\r\n\r\n    </Form>\r\n\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  getUsername: PropTypes.func.isRequired,\r\n  getPassword: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default LoginForm","import React, { useState, forwardRef, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'react-bootstrap'\r\n\r\n\r\nconst Togglable = forwardRef((props, refs) => {\r\n  const [loginVisible, setLoginVisible] = useState(false)\r\n\r\n  const toggleVisibility = () => {\r\n    if(props.user) setLoginVisible(!loginVisible)\r\n    else alert('you need to log in to add a note')\r\n  }\r\n\r\n  useImperativeHandle(refs, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  const style = {\r\n    \r\n    display: loginVisible ?  '' : 'none',\r\n    width: '60%',\r\n    margin:'auto',\r\n    padding: '10'\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <div style = {{marginBottom: '15px'}} className = {loginVisible ? 'noteFormContainer1': 'noteFormContainer2'}>\r\n     <div style={!loginVisible ? { display:'' } : { display:'none' }}>\r\n       <Button variant='success' onClick = {toggleVisibility}>{props.buttonLabel}</Button>\r\n     </div>\r\n\r\n      <div style= {style} className=\"togglableContent\">\r\n        {props.children} \r\n        <div style = {{margin: 'auto', width: '85px'}}>\r\n        <Button variant='danger' onClick={toggleVisibility}>CANCEL</Button>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React from 'react'\r\nimport { Nav, Navbar, Button } from 'react-bootstrap'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst NavBar = ({user, handleLogout}) => {\r\n  const padding = {padding : 1}\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n     <Navbar.Brand style={{marginLeft:'8px'}} href=\"#\">Note List Application</Navbar.Brand>\r\n     <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n       <Nav style={{width:'100%', display:'flex', justifyContent:'end'}} className=\"me-auto\">\r\n\r\n        <Nav.Link href=\"#\" as=\"span\">\r\n         <Link style={padding} to=\"/\">\r\n          <Button variant='dark'>Home</Button>\r\n         </Link>\r\n        </Nav.Link>\r\n\r\n        <Nav.Link href=\"#\" as=\"span\"> \r\n         <Link style={padding} to=\"/notes\">\r\n         <Button variant='dark'>Notes</Button>\r\n         </Link>\r\n        </Nav.Link>\r\n\r\n        <Nav.Link href=\"#\" as=\"span\">\r\n        {user\r\n       ? (\r\n        <>\r\n        <em>{user.name} logged in</em>\r\n        <Link style={padding} to=\"/\">\r\n         <Button variant='light' onClick = {handleLogout}>log out</Button>\r\n        </Link>\r\n        </>\r\n        \r\n       )\r\n       : <Link style={padding} to=\"/login\">\r\n        <Button variant='dark'>Login</Button>\r\n       </Link>\r\n       }\r\n        </Nav.Link>\r\n\r\n        \r\n       </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React, { useState, useEffect, useRef } from 'react'\r\nimport Notes from './components/Notes.jsx'\r\nimport NoteForm from './components/NoteForm.jsx'\r\nimport Home from './components/Home.jsx'\r\nimport comm from './services/notes.js'\r\nimport request from './services/login.js'\r\nimport Notification from './components/Notification.jsx'\r\nimport LoginForm from './components/LoginForm.jsx'\r\nimport Togglable from './components/Togglable.jsx'\r\nimport { Button } from 'react-bootstrap'\r\nimport {\r\n  Routes, \r\n  Route,\r\n  Navigate\r\n} from \"react-router-dom\"\r\nimport NavBar from './components/NavBar.jsx'\r\n\r\n\r\nconst App = () => {\r\n  const [newNote, setNewNote] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [notification, setNotification] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\r\n    if(loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      comm.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  const addNote = async (newNote) => {\r\n\r\n    try { // adding new note\r\n      const response = await comm.create(newNote)\r\n      setNewNote(response)\r\n      // setNotes(notes.concat(response))  // updating the notes that render on the frontend\r\n      setNotification('note added successfully...')\r\n      setTimeout(() => {setNotification(null)}, 2000)\r\n    } catch(exception) {\r\n      console.log(exception.response.data.error)\r\n      setNotification(`${exception.response.data.error}`)\r\n      setTimeout(() => {setNotification(null)}, 5000)\r\n    }\r\n\r\n    noteFormRef.current.toggleVisibility()\r\n\r\n  }\r\n\r\n\r\n  const getUsername = e => {\r\n    setUsername(e.target.value)\r\n  }\r\n\r\n  const getPassword = e => {\r\n    setPassword(e.target.value)\r\n\r\n  }\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault()\r\n    console.log(`logging in with username:${username} and pw:${password}`)\r\n\r\n    // credentials object\r\n    const credentials = {\r\n      username,\r\n      password\r\n    }\r\n\r\n    try {\r\n      const user = await request.login(credentials)\r\n      setUser(user)\r\n      // receiving the user token\r\n      comm.setToken(user.token)\r\n      setPassword('')\r\n      setUsername('')\r\n      setNotification(`Logged in successfully. Welcome ${user.name}!`)\r\n      setTimeout(() => {\r\n        setNotification(null)\r\n      }, 4000)\r\n\r\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\r\n\r\n    } catch(exception) {\r\n      console.log(exception) // to get error message\r\n      setNotification(`${exception.response.data.error}`)\r\n      setTimeout(() => {\r\n        setNotification(null)\r\n      }, 4000)\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n\r\n    window.localStorage.removeItem('loggedInUser')\r\n\r\n    setNotification('Logging out...')\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n      setUser(null)\r\n    }, 1000)\r\n  }\r\n  \r\n  const noteFormRef = useRef()\r\n\r\n  \r\n\r\n  return(\r\n    <div id='appContainer'>\r\n    <div>\r\n    <NavBar user = {user} handleLogout={handleLogout} />\r\n     <Notification message = {notification} />\r\n    </div>\r\n\r\n    <Routes>\r\n        <Route path=\"/notes\" element={(\r\n          <>\r\n            <Notes newNote = {newNote} />\r\n            <Togglable buttonLabel = 'Add Note' ref = {noteFormRef} user = {user}>\r\n             <NoteForm createNote = {addNote}/>\r\n            </Togglable> \r\n          </>\r\n        )} />\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/login\" element={user ? (<Navigate replace to='/'/>):(<LoginForm\r\n           handleLogin = {handleLogin}\r\n           username = {username}\r\n           getUsername = {getUsername}\r\n           password = {password}\r\n           getPassword = {getPassword}\r\n         />)} />\r\n      </Routes>\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App5';\nimport {BrowserRouter} from 'react-router-dom'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n\n\n// import React from 'react' \n// import ReactDOM from 'react-dom/client'\n// import { useState } from 'react' \n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link,\n//   Navigate,\n//   useParams,\n//   useNavigate,\n//   useMatch\n// } from \"react-router-dom\"\n\n\n// const Home = () => (\n//   <div>\n//     <h2>TKTL notes app</h2>\n//     <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n//   </div>\n\n// )  \n\n// const Note = ({ note }) => {\n\n//   return (\n//     <div>\n//       <h2>{note.content}</h2>\n//       <div>{note.user}</div>\n//       <div><strong>{note.important ? 'important' : ''}</strong></div>\n//     </div>\n//   )\n// }\n\n// const Notes = ({ notes }) => (\n//   <div>\n//     <h2>Notes</h2>\n//     <ul>\n//       {notes.map(note =>\n//         <li key={note.id}>\n//           <Link to={`/notes/${note.id}`}>{note.content}</Link>\n//         </li>\n//       )}\n//     </ul>\n//   </div>\n// )\n\n// const Users = () => (\n//   <div>\n//     <h2>TKTL notes app</h2>\n//     <ul>\n//       <li>Matti Luukkainen</li>\n//       <li>Juha Tauriainen</li>\n//       <li>Arto Hellas</li>\n//     </ul>\n//   </div>\n// )\n\n// const Login = (props) => {\n//   const navigate = useNavigate()\n\n//   const onSubmit = (event) => {\n//     event.preventDefault()\n//     props.onLogin('mluukkai')\n//     navigate('/')\n//   }\n\n//   return (\n//     <div>\n//       <h2>login</h2>\n//       <form onSubmit={onSubmit}>\n//         <div>\n//           username: <input />\n//         </div>\n//         <div>\n//           password: <input type='password' />\n//         </div>\n//         <button type=\"submit\">login</button>\n//       </form>\n//     </div>\n//   )\n// }\n\n// const App = () => {\n//   const [notes, setNotes] = useState([\n//     {\n//       id: 1,\n//       content: 'HTML is easy',\n//       important: true,\n//       user: 'Matti Luukkainen'\n//     },\n//     {\n//       id: 2,\n//       content: 'Browser can execute only JavaScript',\n//       important: false,\n//       user: 'Matti Luukkainen'\n//     },\n//     {\n//       id: 3,\n//       content: 'Most important methods of HTTP-protocol are GET and POST',\n//       important: true,\n//       user: 'Arto Hellas'\n//     }\n//   ])\n\n//   const [user, setUser] = useState(null)\n\n//   const match = useMatch('/notes/:id')\n\n//   const note = match\n//     ? notes.find(note => note.id === Number(match.params.id))\n//     : null\n\n\n//   const login = (user) => {\n//     setUser(user)\n//   }\n\n//   const padding = {\n//     padding: 5\n//   }\n\n//   return (\n//     <div>\n//       <div>\n//         <Link style={padding} to=\"/\">home</Link>\n//         <Link style={padding} to=\"/notes\">notes</Link>\n//         <Link style={padding} to=\"/users\">users</Link>\n//         {user\n//           ? <em>{user} logged in</em>\n//           : <Link style={padding} to=\"/login\">login</Link>\n//         }\n//       </div>\n//       <Routes>\n//         <Route path=\"/notes/:id\" element={<Note note={note} />} />\n//         <Route path=\"/notes\" element={<Notes notes={notes} />} />\n//         <Route path=\"/users\" element={user ? <Users /> : <Navigate replace to=\"/login\" />} />\n//         <Route path=\"/login\" element={<Login onLogin={login} />} />\n//         <Route path=\"/\" element={<Home />} />\n//       </Routes>\n//       <div>\n//         <br />\n//         <em>Note app, Department of Computer Science 2022</em>\n//       </div>\n//     </div>\n//   )\n// }\n\n// ReactDOM.createRoot(document.getElementById('root')).render(<Router><App /></Router>)\n"],"sourceRoot":""}