{"version":3,"sources":["components/Note.jsx","components/AddNote.jsx","services/notes.js","App5.js","reportWebVitals.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","Fragment","content","onClick","AddNote","getNote","value","onChange","baseUrl","services_notes","getAll","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","create","newObject","axios","post","update","id","put","concat","App","_useState","useState","_useState2","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","useEffect","comm","then","map","components_Note","key","find","changedNote","objectSpread","newNotes","toConsumableArray","splice","indexOf","components_AddNote","e","target","preventDefault","noteToAdd","date","Date","toDateString","Math","random","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App5"],"mappings":"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","file":"static/js/main.9532c02f.chunk.js","sourcesContent":["import React from 'react';\r\n// import AddNote from './AddNote.jsx';\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n\r\n    const label = note.important ? 'make not important' : 'make important'\r\n    \r\n    return(\r\n      <>\r\n       <li>\r\n        {note.content}\r\n        <button onClick = {toggleImportance}>{label}</button>\r\n        </li>\r\n      </>\r\n       \r\n    )\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\n\r\nconst AddNote = ({note, getNote, onClick}) => {\r\n   return (\r\n    <>\r\n      <form>\r\n       <input value = {note} onChange = {getNote}/>\r\n       <button onClick = {onClick}>Add Note</button>\r\n      </form>\r\n    </>\r\n   )\r\n}\r\n\r\nexport default AddNote;","import axios from 'axios';\r\n\r\n// const baseUrl = 'http://localhost:3001/api/notes';\r\nconst baseUrl = 'https://shrouded-ridge-66457.herokuapp.com/api/notes';\r\n\r\nconst getAll = async () => {\r\n    // return axios.get(baseUrl)\r\n    let response = await fetch(baseUrl);\r\n    let data = await response.json();\r\n    return data;\r\n  }\r\n  \r\n  const create = newObject => {\r\n    return axios.post(baseUrl, newObject);\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject);\r\n  }\r\n  \r\n\r\n  export default { getAll, create, update }","import React, {useState, useEffect} from 'react';\r\nimport Note from './components/Note.jsx';\r\nimport AddNote from './components/AddNote.jsx';\r\n// import axios from 'axios';\r\nimport comm from './services/notes.js'\r\n\r\nconst App = () => {\r\n   const [notes, setNotes] = useState([]);\r\n   const [newNote, setNewNote] = useState(\"\");\r\n  \r\n   useEffect(() => {\r\n   //  const fetchNotes = async () => {\r\n   //      let response = await fetch('http://localhost:3001/notes');\r\n   //      let notes = await response.json();\r\n   //      setNotes(notes);\r\n   //  }\r\n   //  fetchNotes();\r\n   let response = comm.getAll();\r\n   response.then(data => setNotes(data));\r\n\r\n   }, []);\r\n\r\n   const getNote = e => setNewNote(e.target.value);\r\n\r\n   const addNote = e => {\r\n     e.preventDefault();\r\n     let noteToAdd = {\r\n        content: newNote,\r\n        date: new Date().toDateString(),\r\n        important: Math.random() > 0.5 ? true : false\r\n     }\r\n\r\n   // axios.post('http://localhost:3001/notes', noteToAdd)\r\n   // .then(response => {\r\n   //    setNotes(notes.concat(response.data));\r\n   //    setNewNote(\"\");\r\n   // })\r\n\r\n   comm\r\n   .create(noteToAdd)\r\n   .then(response => {\r\n      setNotes(notes.concat(response.data));\r\n      setNewNote(\"\");\r\n   })\r\n   }\r\n   \r\n\r\n\r\n   const toggleImportance = (id) => {\r\n      // const url = `http://localhost:3001/notes/${id}`\r\n      const note = notes.find(note => note.id === id);\r\n       const changedNote = {...note, important: !note.important};\r\n       \r\n\r\n      //  axios.put(url, changedNote)\r\n      //  .then(response => {\r\n      //    console.log(response)\r\n      //    let newNotes = [...notes];\r\n      //    newNotes.splice(newNotes.indexOf(note), 1, response.data);    // array tha containes the removed elements\r\n      //    setNotes(newNotes);\r\n      //  })\r\n\r\n      comm\r\n      .update(id, changedNote)\r\n      .then(response => {\r\n         let newNotes = [...notes];\r\n         newNotes.splice(newNotes.indexOf(note), 1, response.data);    // array tha containes the removed elements\r\n         setNotes(newNotes);\r\n       })\r\n   }\r\n\r\n\r\n   return(\r\n    <>\r\n    <ul>\r\n    {\r\n      notes.map(note => {\r\n         return <Note key = {note.id} note = {note} toggleImportance = {() => toggleImportance(note.id)}/>\r\n      })\r\n    }\r\n    </ul>\r\n    \r\n    <AddNote note = {newNote} getNote = {getNote} onClick = {addNote}/>\r\n    </> \r\n   )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App5';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}